<!DOCTYPE html>
<html>
<head>
<meta charset="utf8" />
<title>mpt-sln</title>
</head>
<body>

<table><tr><td style="vertical-align:top;">
<h1>mpt-sln</h1>
</td><td style="vertical-align:top;">
<a href="../mono-packaging-tools.htm">mono-packaging-tools</a>
<br />
&nbsp;
</td></tr></table>
<a href="https://github.com/ArsenShnurkov/mono-packaging-tools/tree/master/mpt-sln">https://github.com/ArsenShnurkov/mono-packaging-tools/tree/master/mpt-sln</a>

<br />
<br />
and for the solution just use EnvDTE (<a href="http://msdn.microsoft.com/en-us/library/envdte.solution.aspx">MSDN documentation</a>)
<br />
<br />
Вместо него есть такой класс:
<br />
<a href="https://github.com/ArsenShnurkov/slntools/blob/master/Main/CWDev.SLNTools.Core.dll/SolutionFile.cs">https://github.com/ArsenShnurkov/slntools/blob/master/Main/CWDev.SLNTools.Core.dll/SolutionFile.cs</a>
<br />
Там есть статический метод для загрузки файла в память
<br />
var sln = SolutionFile.FromFile(solutionFullPath);
<br />
При считывании создаётся коллекция проектов:
<br />
var projList = sln.Projects; // Это наследник от <a href="https://msdn.microsoft.com/en-us/library/ms132438%28v=vs.110%29.aspx">KeyedCollection</a> - 
<br />
KeyedCollection keeps your items in the order in which they are added (the first item added is at index 0 and the last added is at the last index). Dictionary does not (or at least it is never guaranteed to do so).
<br />
(источник - <a href="http://stackoverflow.com/questions/7566657/dictionary-or-keyedcollection">http://stackoverflow.com/questions/7566657/dictionary-or-keyedcollection</a>)
<br />
но это не просто KeyedCollection, это класс-наследник <a href="https://github.com/ArsenShnurkov/slntools/blob/master/Main/CWDev.SLNTools.Core.dll/ProjectHashList.cs">ProjectHashList</a>
<br />
имеет специальный метод Project <a href="https://github.com/ArsenShnurkov/slntools/blob/master/Main/CWDev.SLNTools.Core.dll/ProjectHashList.cs#L87">FindByFullName</a>(string projectFullName)
<br />
var proj = sln.Projects.FindByFullName("MyCsProjName");
<br />
И вот когда он найден, его можно удалить методом Remove из класса KeyedCollection
<br />
sln.Projects.Remove(proj)
<br />
после чего можно сохранить Solution методом Save
<br />
sln.Save();
<br />
<br />
<a href="http://stackoverflow.com/questions/22329677/remove-projects-from-a-solution-programmatically/39100945#39100945">http://stackoverflow.com/questions/22329677/remove-projects-from-a-solution-programmatically/39100945#39100945</a>

<h2>Зависимости в ebuild-ах</h2>
Добавлен ли ебилд slntools в зависимости к mono-packaging-tools ?
<br />
пока не добавлен:
<br />
<a href="https://github.com/ArsenShnurkov/dotnet/blob/1e7571f7795f972011adb7924675afccdd6c8964/dev-util/mono-packaging-tools/mono-packaging-tools-0.1.2_p201608183.ebuild#L23-L26">https://github.com/ArsenShnurkov/dotnet/blob/1e7571f7795f972011adb7924675afccdd6c8964/dev-util/mono-packaging-tools/mono-packaging-tools-0.1.2_p201608183.ebuild#L23-L26</a>
<br />
это всё потому, что он не устанавливается в GAC. Нужно устанавливать в GAC, тестировать, бампать версию, потом добавлять зависимость, вписывать код парсинга параметров, вписывать код удаления проекта, снова тестировать, бампать другую версию.

<h2>slntools</h2>
Недоработки:
<br />
1) может не работать egacinstall при установке бинарных ебилдов (потому что gac может находиться в непривычной локации), а так он файлы в GAC запишет, наверное
<br />
2) версия .dll в GAC 1.1.1.0 не совпадает с версией пакета 1.1.3 (ну и ладно)
<br />
3) не устанавливается .pc-файл, а значит эта сборка не будет видна в monodevelop
<br />
4) наверное как-то можно ещё делать aot-компиляцию, но я не разбирался


<h2>Ошибка дублирования свойств</h2>
i am trying to remove csproj from sln, but library throws the exception
<br />
"CWDev.SLNTools.Core.SolutionFileException: Trying to add a new property line '$0.XmlFormattingPolicy=$16' when there is already a line with the same key and the value '$13' in the collection."
<br />
Why there are properties with the same ID
<br />
$0.XmlFormattingPolicy
<br />
$0.TextStylePolicy
<br />
is it safe to ignore these duplicates?
<br />
<br />
<pre>
&lt;ItemGroup&gt;
    &lt;ReferenceProject Include=&quot;../mpt-core/mpt-core.csproj&quot; /&gt;
&lt;/ItemGroup&gt;

mono --debug /var/calculate/remote/distfiles/egit-src/mono-packaging-tools.git/mpt-sln/bin/Debug/mpt-sln.exe --sln-file /var/tmp/portage/dev-util/monodevelop-6.1_p2016062206/work/monodevelop-6.1/Main.sln --remove-proj FSharpBinding
meld /var/tmp/portage/dev-util/monodevelop-6.1_p2016062206/work/monodevelop-6.1/Main.sln.bak /var/tmp/portage/dev-util/monodevelop-6.1_p2016062206/work/monodevelop-6.1/Main.sln


	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj FSharpBinding || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj MonoDevelop.FSharp || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj MonoDevelop.FSharp.Shared || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj MonoDevelop.FSharp.Gui || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj MonoDevelop.FSharpInteractive.Service || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj MonoDevelop.FSharp.Tests || die
	/usr/bin/mpt-sln --sln-file "${S}/Main.sln" --remove-proj GitLib2Sharp || die || die


/var/tmp/portage/dev-dotnet/slntools-1.1.3_p201508170-r1/work/slntools-705869e96a2f0e401be03f8e8478df3e1f2b9373/Main/CWDev.SLNTools.Core.dll/PropertyLineHashList.cs:59
</pre>

wget -c <a href="https://raw.githubusercontent.com/mono/monodevelop/master/main/Main.sln">https://raw.githubusercontent.com/mono/monodevelop/master/main/Main.sln</a>
<br />
<br />
Чтобы решить эту проблему по-хорошему, надо было:
<br />
1) Добавить свойство в коллекцию
<br />
2) в методе коллекции добавить проверку значания свойства, и в случае нахождения дубля не бросать исключение, если свойство установлено
<br />
3) получать значение этого свойства из командной строки (добавить параметр)
<br />
4) прописать в ebuild передачу этого значения
<br />
<br />
Тогда оно бы могло срабатывать без изменения .sln-файла.
<br />
<br />
Вместо этого я sed-ом вырезал все дублирующиеся строки (всё равно это сборка/билдовка, а не разработка и свойства для разработки при билдовке не понадобятся)


</body>
</html>
